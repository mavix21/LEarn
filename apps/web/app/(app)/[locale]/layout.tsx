import { Geist, Geist_Mono } from "next/font/google";

import "../app.css";

import type { Metadata } from "next";
import { notFound } from "next/navigation";
import { hasLocale, NextIntlClientProvider } from "next-intl";

import { ThemeProvider } from "@/app/_shared/ui/theme-provider";
import { routing } from "@/i18n/routing";
import { env } from "@/src/env";

import { ConvexClientProvider, OnchainKitProvider } from "../_providers";

const fontSans = Geist({
  subsets: ["latin"],
  variable: "--font-sans",
});

const fontMono = Geist_Mono({
  subsets: ["latin"],
  variable: "--font-mono",
});

export const metadata: Metadata = {
  title: env.NEXT_PUBLIC_ONCHAINKIT_PROJECT_NAME,
  description:
    "Generated by `create-onchain`, a Next.js template for OnchainKit",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`${fontSans.variable} ${fontMono.variable} font-sans antialiased`}
      >
        <NextIntlClientProvider>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <OnchainKitProvider>
              <ConvexClientProvider>{children}</ConvexClientProvider>
            </OnchainKitProvider>
          </ThemeProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
